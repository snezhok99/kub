pipeline {
    agent any

    environment {
        KUBECONFIG = credentials('kubeconfig-secret-id')   // kubeconfig –∏–∑ Jenkins credentials
        MYSQL_PASSWORD = credentials('mysql-root-pass')    // –ø–∞—Ä–æ–ª—å –æ—Ç –ë–î (—Å–µ–∫—Ä–µ—Ç)
    }

    stages {
        stage('Check Kubernetes') {
            steps {
                echo 'üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–ª–∞—Å—Ç–µ—Ä—É...'
                sh 'kubectl cluster-info'
                sh 'kubectl get nodes -o wide'
            }
        }

        stage('Test Database') {
            steps {
                echo 'üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ë–î...'
                sh '''
                    set -e
                    kubectl exec -n crud deploy/mysql-master -- \
                      mysqladmin ping -uroot -p$MYSQL_PASSWORD
                '''
            }
        }

        stage('Test Frontend') {
            steps {
                echo 'üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ—Ä–æ–Ω—Ç—É...'
                sh '''
                    RESPONSE=$(curl -sSf http://192.168.0.100:80 || true)
                    if [ -z "$RESPONSE" ]; then
                      echo "‚ùå –§—Ä–æ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                      exit 1
                    fi
                    echo "‚úÖ –§—Ä–æ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
                '''
            }
        }

        stage('Deploy Application') {
            steps {
                echo 'üöÄ –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...'
                sh '''
                    kubectl apply -f k8s/
                    kubectl rollout status deployment/crudback-app -n crud
                    kubectl rollout status deployment/mysql-master -n crud
                    kubectl rollout status deployment/mysql-slave -n crud
                '''
            }
        }
    }

    post {
        success {
            echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!"
        }
        failure {
            echo "‚ùå –û—à–∏–±–∫–∞ –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ!"
        }
    }
}
